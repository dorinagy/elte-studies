{"ast":null,"code":"var _jsxFileName = \"/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/game/game-items/deck/Card.js\",\n    _s = $RefreshSig$();\n\nimport { getSource } from \"../../../../ImageLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { drawCard, drawFromDeck } from \"../../../../redux/actions\";\nimport { getCurrentPlayer, getClientPlayer } from \"../../../../redux/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(properties) {\n  _s();\n\n  var _useSelector, _useSelector$wagonCar;\n\n  const index = properties.clicked;\n  const isDeck = properties.isDeck;\n  const isTable = properties.isTable;\n  const currentPlayer = useSelector(getCurrentPlayer);\n  const clientPlayer = useSelector(getClientPlayer);\n  const cards = (_useSelector = useSelector(getClientPlayer)) === null || _useSelector === void 0 ? void 0 : (_useSelector$wagonCar = _useSelector.wagonCards) === null || _useSelector$wagonCar === void 0 ? void 0 : _useSelector$wagonCar.length;\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    if (cards && cards < 9 && currentPlayer.name === clientPlayer.name) {\n      if (isDeck) {\n        console.log('draw card from deck');\n        dispatch(drawFromDeck({\n          player: clientPlayer\n        }));\n      } else if (isTable) {\n        console.log('draw card');\n        dispatch(drawCard({\n          player: clientPlayer,\n          number: index\n        }));\n      }\n    }\n  };\n\n  const getImageScource = name => {\n    if (typeof name === undefined || !name) name = 'white';\n    return getSource(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"train-ticket\",\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getImageScource(properties.type),\n      alt: `${properties.type} train ticket`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"Goe3ZK7c/Sg2jzLyn3zBpNd+bnU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/game/game-items/deck/Card.js"],"names":["getSource","useDispatch","useSelector","drawCard","drawFromDeck","getCurrentPlayer","getClientPlayer","Card","properties","index","clicked","isDeck","isTable","currentPlayer","clientPlayer","cards","wagonCards","length","dispatch","onClick","name","console","log","player","number","getImageScource","undefined","type"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,2BAAvC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;;;AAGA,SAASC,IAAT,CAAcC,UAAd,EAA0B;AAAA;;AAAA;;AAExB,QAAMC,KAAK,GAAGD,UAAU,CAACE,OAAzB;AAEA,QAAMC,MAAM,GAAGH,UAAU,CAACG,MAA1B;AACA,QAAMC,OAAO,GAAGJ,UAAU,CAACI,OAA3B;AAEA,QAAMC,aAAa,GAAGX,WAAW,CAACG,gBAAD,CAAjC;AACA,QAAMS,YAAY,GAAGZ,WAAW,CAACI,eAAD,CAAhC;AAEA,QAAMS,KAAK,mBAAGb,WAAW,CAACI,eAAD,CAAd,0EAAG,aAA8BU,UAAjC,0DAAG,sBAA0CC,MAAxD;AAEA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,OAAO,GAAG,MAAM;AACpB,QAAIJ,KAAK,IAAIA,KAAK,GAAG,CAAjB,IAAsBF,aAAa,CAACO,IAAd,KAAuBN,YAAY,CAACM,IAA9D,EAAoE;AAClE,UAAIT,MAAJ,EAAY;AACVU,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAJ,QAAAA,QAAQ,CAACd,YAAY,CAAC;AAACmB,UAAAA,MAAM,EAAET;AAAT,SAAD,CAAb,CAAR;AACD,OAHD,MAGO,IAAIF,OAAJ,EAAa;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,QAAAA,QAAQ,CAACf,QAAQ,CAAC;AAACoB,UAAAA,MAAM,EAAET,YAAT;AAAuBU,UAAAA,MAAM,EAAEf;AAA/B,SAAD,CAAT,CAAR;AACD;AACJ;AACA,GAVD;;AAYA,QAAMgB,eAAe,GAAIL,IAAD,IAAU;AAChC,QAAI,OAAOA,IAAP,KAAgBM,SAAhB,IAA6B,CAACN,IAAlC,EAAwCA,IAAI,GAAI,OAAR;AACxC,WAAOpB,SAAS,CAACoB,IAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEM,eAAe,CAACjB,UAAU,CAACmB,IAAZ,CAAzB;AAA4C,MAAA,GAAG,EAAG,GAAEnB,UAAU,CAACmB,IAAK;AAApE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApCQpB,I;UAOeL,W,EACDA,W,EAEPA,W,EAEGD,W;;;KAZVM,I;AAsCT,eAAeA,IAAf","sourcesContent":["import { getSource } from \"../../../../ImageLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { drawCard, drawFromDeck } from \"../../../../redux/actions\";\nimport { getCurrentPlayer, getClientPlayer } from \"../../../../redux/selectors\";\n\n\nfunction Card(properties) {\n\n  const index = properties.clicked;\n\n  const isDeck = properties.isDeck;\n  const isTable = properties.isTable;\n\n  const currentPlayer = useSelector(getCurrentPlayer);\n  const clientPlayer = useSelector(getClientPlayer);\n\n  const cards = useSelector(getClientPlayer)?.wagonCards?.length;\n\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    if (cards && cards < 9 && currentPlayer.name === clientPlayer.name) {\n      if (isDeck) {\n        console.log('draw card from deck');\n        dispatch(drawFromDeck({player: clientPlayer }));\n      } else if (isTable) {\n        console.log('draw card');\n        dispatch(drawCard({player: clientPlayer, number: index}));\n      }\n  }\n  }\n\n  const getImageScource = (name) => {\n    if (typeof name === undefined || !name) name =  'white';\n    return getSource(name);\n  }\n\n  return (\n    <div className=\"train-ticket\" onClick={onClick}>\n      <img src={getImageScource(properties.type)} alt={`${properties.type} train ticket`} />\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}