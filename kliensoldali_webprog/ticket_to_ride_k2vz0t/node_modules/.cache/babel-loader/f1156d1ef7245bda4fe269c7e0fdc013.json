{"ast":null,"code":"var _jsxFileName = \"/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/waiting-room/WaitingRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { initGame } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n/* getClientPlayer,  */\ngetMaxPlayers, getPlayers, getRoomCode } from \"../../redux/selectors\";\nimport socket from \"../../socket/socket\";\nimport \"./WaitingRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Wait() {\n  _s();\n\n  const players = useSelector(getPlayers);\n  const playersCount = Object.values(players).filter(player => player.name).length;\n  let maxPlayers = useSelector(getMaxPlayers); //const clientPlayer = useSelector(getClientPlayer);\n\n  const history = useHistory();\n  const code = useSelector(getRoomCode);\n  if (!maxPlayers) maxPlayers = 2;\n  const dispatch = useDispatch();\n\n  const enterGame = () => {\n    alert(\"A játék automatikusan elindul ha minden játékos csatlakozott!\");\n    return;\n  };\n\n  if (playersCount === maxPlayers) {\n    history.push(\"/game\");\n  }\n\n  socket.on(\"room-is-full\", res => {\n    socket.emit(\"get-state\", code, stateAck => {\n      if (stateAck.status === \"ok\") {\n        const state = JSON.parse(stateAck.state);\n\n        if (state.gameStatus !== 'IN_GAME') {\n          dispatch(initGame(players));\n        }\n\n        history.push(\"/game\");\n      }\n    });\n  });\n  const [goBack, setGoBack] = useState(false);\n\n  const ReturnHome = event => {\n    event.preventDefault();\n    setGoBack(true);\n  };\n\n  if (goBack) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"K\\xD3D: \", code]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Waiting for other players to connect.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [playersCount, \" / \", maxPlayers, \" players have joined.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn\",\n        onClick: enterGame,\n        children: \"Tov\\xE1bb a j\\xE1t\\xE9kra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn\",\n        onClick: ReturnHome,\n        children: \"Vissza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Wait, \"r2A86mjTxuowJYxXyQkra4Qg7zs=\", false, function () {\n  return [useSelector, useSelector, useHistory, useSelector, useDispatch];\n});\n\n_c = Wait;\nexport default Wait;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wait\");","map":{"version":3,"sources":["/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/waiting-room/WaitingRoom.js"],"names":["React","useState","initGame","useDispatch","useSelector","Redirect","useHistory","getMaxPlayers","getPlayers","getRoomCode","socket","Wait","players","playersCount","Object","values","filter","player","name","length","maxPlayers","history","code","dispatch","enterGame","alert","push","on","res","emit","stateAck","status","state","JSON","parse","gameStatus","goBack","setGoBack","ReturnHome","event","preventDefault","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { initGame } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { /* getClientPlayer,  */ getMaxPlayers, getPlayers, getRoomCode } from \"../../redux/selectors\";\n\nimport socket from \"../../socket/socket\";\n\nimport \"./WaitingRoom.css\";\n\nfunction Wait() {\n\n  const players = useSelector(getPlayers);\n\n  const playersCount = Object.values(players).filter(player => player.name).length;\n\n  let maxPlayers = useSelector(getMaxPlayers);\n\n  //const clientPlayer = useSelector(getClientPlayer);\n\n  const history = useHistory();\n\n  const code = useSelector(getRoomCode);\n\n  if (!maxPlayers) maxPlayers = 2;\n\n  const dispatch = useDispatch();\n\n  const enterGame = () => {\n\n    alert(\"A játék automatikusan elindul ha minden játékos csatlakozott!\");\n\n    return;\n  };\n\n  if (playersCount === maxPlayers) {\n    history.push(\"/game\");\n  }\n\n  socket.on(\"room-is-full\", (res) => {\n    socket.emit(\"get-state\", code, (stateAck) => {\n      if (stateAck.status === \"ok\") {\n        const state = JSON.parse(stateAck.state);\n        if (state.gameStatus !== 'IN_GAME') {\n          dispatch(initGame(players));\n        }\n        history.push(\"/game\");\n      }\n    });\n  });\n  \n  const [goBack, setGoBack] = useState(false);\n\n  const ReturnHome = event => {\n    event.preventDefault();\n    setGoBack(true);\n  };\n\n    if (goBack) {\n      return (<Redirect push to={{ pathname: \"/\" }} />);\n    }\n\n    return (\n      <div className=\"waiting-room\">\n        <h1>KÓD: {code}</h1><br/>\n        <div>Waiting for other players to connect.</div>\n        <div>{playersCount} / {maxPlayers} players have joined.</div>\n\n        <div className=\"btn-container\">\n          {/* @todo: remove */}\n          <button className=\"custom-btn\" onClick={enterGame}>\n            Tovább a játékra\n          </button>\n\n          <button className=\"custom-btn\" onClick={ReturnHome}>\n            Vissza\n          </button>\n        </div>\n    </div>\n    );\n}\n\nexport default Wait;\n"]},"metadata":{},"sourceType":"module"}