{"ast":null,"code":"var _jsxFileName = \"/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/game/game-items/map/Map.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useRef, useState } from \"react\";\nimport map from \"../../../../res/ticket-to-ride-europe-map.jpg\";\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_WIDTH = 900;\nconst MAX_HEIGHT = 600;\n\nconst Map = props => {\n  _s();\n\n  const cities = useSelector(state => state.gameData.cities);\n  const ldPair = useSelector(state => {\n    var _state$gameState;\n\n    return (_state$gameState = state.gameState) === null || _state$gameState === void 0 ? void 0 : _state$gameState.ldPair;\n  });\n  const canvas = useRef(null);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    const tableimg = new Image();\n    tableimg.src = map;\n\n    tableimg.onload = () => setImage(tableimg);\n  }, []);\n  useEffect(() => {\n    if (image && canvas) {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.drawImage(image, 0, 0);\n    }\n\n    if (ldPair) {\n      var _from, _from2, _to, _to2;\n\n      let from;\n      let to;\n\n      for (const city in cities) {\n        if (city === ldPair[0]) {\n          from = cities[city];\n        }\n\n        if (city === ldPair[1]) {\n          to = cities[city];\n        }\n      }\n\n      const fromX = ((_from = from) === null || _from === void 0 ? void 0 : _from.x) * MAX_WIDTH / 100;\n      const fromY = ((_from2 = from) === null || _from2 === void 0 ? void 0 : _from2.y) * MAX_HEIGHT / 100;\n      const toX = ((_to = to) === null || _to === void 0 ? void 0 : _to.x) * MAX_WIDTH / 100;\n      const toY = ((_to2 = to) === null || _to2 === void 0 ? void 0 : _to2.y) * MAX_HEIGHT / 100;\n      const ctxFrom = canvas.current.getContext(\"2d\");\n      ctxFrom.beginPath();\n      ctxFrom.arc(fromX, fromY, 15, 0, 2 * Math.PI);\n      ctxFrom.fillStyle = \"red\";\n      ctxFrom.fill();\n      ctxFrom.stroke();\n      const ctxTo = canvas.current.getContext(\"2d\");\n      ctxTo.beginPath();\n      ctxTo.arc(toX, toY, 15, 0, 2 * Math.PI);\n      ctxTo.fillStyle = \"blue\";\n      ctxTo.fill();\n      ctxTo.stroke();\n    }\n  }, [image, canvas, ldPair, cities]);\n\n  const clickHandler = e => {\n    const x = Math.round(e.nativeEvent.offsetX / MAX_WIDTH * 100);\n    const y = Math.round(e.nativeEvent.offsetY / MAX_HEIGHT * 100);\n\n    for (const city in cities) {\n      const cityX = Math.round(cities[city].x);\n      const cityY = Math.round(cities[city].y);\n\n      if ((cityX === x || cityX >= x - 3 && cityX <= x + 3) && (cityY === y || cityY >= y - 3 && cityY <= y + 3)) {\n        console.log(\"TALÁLAT \" + cities[city].city);\n        break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-map\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      className: \"map-img\",\n      width: MAX_WIDTH,\n      height: MAX_HEIGHT,\n      onClick: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"jYBSF93/2QCauDn6jODFIx1raO4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/dori/Egyetem/elte-studies/kliensoldali_webprog/ticket_to_ride_k2vz0t/src/components/game/game-items/map/Map.js"],"names":["useSelector","useEffect","useRef","useState","map","MAX_WIDTH","MAX_HEIGHT","Map","props","cities","state","gameData","ldPair","gameState","canvas","image","setImage","tableimg","Image","src","onload","ctx","current","getContext","drawImage","from","to","city","fromX","x","fromY","y","toX","toY","ctxFrom","beginPath","arc","Math","PI","fillStyle","fill","stroke","ctxTo","clickHandler","e","round","nativeEvent","offsetX","offsetY","cityX","cityY","console","log"],"mappings":"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","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useEffect, useRef, useState } from \"react\";\nimport map from \"../../../../res/ticket-to-ride-europe-map.jpg\";\n\nimport \"./Map.css\";\n\nconst MAX_WIDTH = 900;\nconst MAX_HEIGHT = 600;\n\nconst Map = (props) => {\n  \n  const cities = useSelector((state) => state.gameData.cities);\n  const ldPair = useSelector((state) => state.gameState?.ldPair);\n\n  const canvas = useRef(null);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    const tableimg = new Image();\n    tableimg.src = map;\n    tableimg.onload = () => setImage(tableimg);\n}, []);\n\n  useEffect(() => {\n      if (image && canvas) {\n          const ctx = canvas.current.getContext(\"2d\");\n          ctx.drawImage(image, 0, 0);\n      }\n      if (ldPair) {\n          let from;\n          let to;\n          \n          for (const city in cities) {\n              if(city === ldPair[0]) {\n                  from = cities[city];\n              }\n              if (city === ldPair[1]) {\n                  to = cities[city];\n              }\n          }\n          \n          const fromX = (from?.x * MAX_WIDTH)/100;\n          const fromY = (from?.y * MAX_HEIGHT)/100;\n          const toX = (to?.x * MAX_WIDTH)/100;\n          const toY = (to?.y * MAX_HEIGHT)/100;\n\n          const ctxFrom = canvas.current.getContext(\"2d\");\n          ctxFrom.beginPath();\n          ctxFrom.arc(fromX,fromY,15,0, 2 * Math.PI);\n          ctxFrom.fillStyle = \"red\";\n          ctxFrom.fill();\n          ctxFrom.stroke();\n          const ctxTo = canvas.current.getContext(\"2d\");\n          ctxTo.beginPath();\n          ctxTo.arc(toX,toY,15,0, 2 * Math.PI);\n          ctxTo.fillStyle = \"blue\";\n          ctxTo.fill();\n          ctxTo.stroke();\n\n      }\n  }, [image,canvas,ldPair,cities]);\n\n\n  const clickHandler = (e) => {\n      const x = Math.round((e.nativeEvent.offsetX / MAX_WIDTH)*100);\n      const y = Math.round((e.nativeEvent.offsetY / MAX_HEIGHT)*100);\n\n      for (const city in cities) {\n          const cityX = (Math.round(cities[city].x));\n          const cityY = (Math.round(cities[city].y))\n          if ((cityX === x || (cityX >= x-3 && cityX <= x+3)) && (cityY === y || (cityY >= y-3 && cityY <= y+3))) {\n              console.log(\"TALÁLAT \" + cities[city].city);\n              break;\n          }\n      }\n  }\n  return (\n    <div className=\"game-map\">\n        <canvas ref={canvas} className=\"map-img\" width={MAX_WIDTH} height={MAX_HEIGHT} onClick={clickHandler}/>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}